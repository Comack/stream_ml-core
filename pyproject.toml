[project]
  name = "stream_ml"
  version = "0.1.0"
  description = "Array API dispatcher."
  readme = "README.rst"
  requires-python = ">=3.8"
  license = {file = "LICENSE"}
  keywords = ["numpy", "interoperability"]
  authors = [
    {name = "Nathaniel Starkman", email = "n.starkman@mail.utoronto.ca"},
    {name = "Jacob Nibauer", email = "jnibauer@princetoon.edu"}
  ]
  maintainers = [
    {name = "Nathaniel Starkman", email = "n.starkman@mail.utoronto.ca"},
    {name = "Jacob Nibauer", email = "jnibauer@princetoon.edu"}
  ]
  classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
  ]
  dependencies = [
    "numpy",
    "astropy",
    "scipy",
    "torch",
  ]

[project.optional-dependencies]
  all = [
    "tqdm",
    "gala",
  ]
  test = [
    "coverage[toml]",
    "numpy>=1.18",
    "pytest",
    "pytest-astropy",
    "typing_extensions>=4.4",
  ]
  docs = [
    "graphviz",
    "IPython",
    "jupyter_client",
    "nbsphinx",
    "pydata-sphinx-theme",
    "sphinx",
    "sphinx-astropy",
    "sphinxcontrib.bibtex < 2.0.0",
    "tomlkit",
  ]

[project.urls]
  homepage = "https://github.com/nstarman/stream_ml"
  repository = "https://github.com/nstarman/stream_ml"
  documentation = "https://github.com/nstarman/stream_ml"


[build-system]
  requires = [
    "mypy>=0.971",
    "setuptools>=45.0",
    "setuptools_scm[toml]>=6.3.1",
    "wheel",
  ]

  build-backend = 'setuptools.build_meta'

[tool.setuptools]
  package-dir = {"" = "src"}

[tool.setuptools_scm]


[tool.autopep8]
  max_line_length = 120
  in-place = true
  recursive = true


[tool.black]
  line-length = 120
  include = '\.pyi?$'
  exclude = '''
  /(
      \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  '''


[tool.coverage.run]
  omit = [
    "*/overload_numpy/conftest.py",
    "*setup_package*",
    "*/overload_numpy/tests/*",
  ]

[tool.coverage.report]
  exclude_lines = [
    # Have to re-enable the standard pragma
    # and branches that don't pertain to this version of Python
    "pragma: no cover",
    "pragma: py{ignore_python_version}",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run
    "if __name__ == .__main__.:",
    # Don't complain about abstract methods, they aren't run:
    '@(abc\.)?abstractmethod',
    # Exclude type check blocks and Protocol contents, they aren't run:
    "if TYPE_CHECKING:",
    '\.\.\.',
    # Don't complain about IPython completion helper
    "def _ipython_key_completions_",
  ]


[tool.isort]
  profile = "black"
  include_trailing_comma = "True"
  use_parentheses = "True"
  ensure_newline_before_comments = "True"
  known_localfolder = "stream_ml"
  known_third_party = ["numpy", "pytest"]
  import_heading_stdlib = "STDLIB"
  import_heading_firstparty = "FIRST-PARTY"
  import_heading_thirdparty = "THIRD-PARTY"
  import_heading_localfolder = "LOCAL"


[tool.mypy]
  disallow_untyped_defs = true
  ignore_missing_imports = true
  no_implicit_optional = true
  warn_return_any = true
  warn_redundant_casts = true
  warn_unused_configs = true
  warn_unreachable = true
  exclude = '''(^|/)tests/'''
  plugins = []
  python_version = "3.10"

  [[tool.mypy.overrides]]
    module = "*/tests/*"
    ignore_errors = true

  [[tool.mypy.overrides]]
    module = "tests/*"
    ignore_errors = true


[tool.ruff]
line-length = 120
select = ["E", "F", "D", "U", "N", "S", "C", "B", "A", "T", "Q", "YTT", "RUF", "M"]
ignore = ["D105", "D107", "D203", "D213"]
